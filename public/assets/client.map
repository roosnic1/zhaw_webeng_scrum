{"version":3,"sources":["vendor/ember-cli/app-prefix.js","client/adapters/application.js","client/app.js","client/components/col-dropzone.js","client/components/issue-dragable.js","client/controllers/issues.js","client/initializers/app-version.js","client/initializers/export-application-global.js","client/models/issue.js","client/router.js","client/routes/issues.js","client/serializers/application.js","client/templates/application.js","client/templates/components/col-dropzone.js","client/templates/components/issue-dragable-edit.js","client/templates/components/issue-dragable.js","client/templates/issues.js","client/tests/adapters/application.jshint.js","client/tests/app.jshint.js","client/tests/components/col-dropzone.jshint.js","client/tests/components/issue-dragable.jshint.js","client/tests/controllers/issues.jshint.js","client/tests/helpers/resolver.js","client/tests/helpers/resolver.jshint.js","client/tests/helpers/start-app.js","client/tests/helpers/start-app.jshint.js","client/tests/models/issue.jshint.js","client/tests/router.jshint.js","client/tests/routes/issues.jshint.js","client/tests/serializers/application.jshint.js","client/tests/test-helper.js","client/tests/test-helper.jshint.js","client/tests/unit/adapters/application-test.js","client/tests/unit/adapters/application-test.jshint.js","client/tests/unit/components/col-dropzone-test.js","client/tests/unit/components/col-dropzone-test.jshint.js","client/tests/unit/components/issue-dragable-test.js","client/tests/unit/components/issue-dragable-test.jshint.js","client/tests/unit/controllers/issues-test.js","client/tests/unit/controllers/issues-test.jshint.js","client/tests/unit/models/issue-test.js","client/tests/unit/models/issue-test.jshint.js","client/tests/unit/routes/issues-test.js","client/tests/unit/routes/issues-test.jshint.js","client/tests/unit/serializers/application-test.js","client/tests/unit/serializers/application-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('client/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].RESTAdapter.extend({\n\t\thost: \"http://localhost:5000\",\n\t\tnamespace: \"api\"\n\t});\n\n});","define('client/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'client/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('client/components/col-dropzone', ['exports', 'ember', 'client/templates/components/col-dropzone'], function (exports, Ember, layout) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    layout: layout['default'],\n\n    classNames: [\"colDropzone\"],\n    classNameBindings: [\"dragClass\"],\n    dragClass: \"deactivated\",\n\n    dragLeave: function dragLeave(event) {\n      event.preventDefault();\n      this.set(\"dragClass\", \"deactivated\");\n    },\n\n    dragOver: function dragOver(event) {\n      event.preventDefault();\n      this.set(\"dragClass\", \"activated\");\n    },\n\n    drop: function drop(event) {\n      var data = event.dataTransfer.getData(\"text/data\");\n      this.sendAction(\"action\", this.get(\"dropped\"), data);\n\n      this.set(\"dragClass\", \"deactivated\");\n    }\n  });\n\n});","define('client/components/issue-dragable', ['exports', 'ember', 'client/templates/components/issue-dragable', 'client/templates/components/issue-dragable-edit'], function (exports, Ember, layout, layoutEdit) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    layout: layout['default'],\n\n    classNames: [\"issueDraggable\", \"col-xs-12\"],\n    attributeBindings: [\"draggable\"],\n    draggable: true,\n\n    hours: [1, 2, 3, 5, 8],\n\n    dragStart: function dragStart(event) {\n      return event.dataTransfer.setData(\"text/data\", this.get(\"content.id\"));\n    },\n\n    actions: {\n      edit: function edit() {\n        this.set(\"layout\", layoutEdit['default']);\n        this.rerender();\n      },\n      save: function save() {\n        this.sendAction(\"actionSave\", this.get(\"content.id\"));\n        this.set(\"layout\", layout['default']);\n        this.rerender();\n      },\n      \"delete\": function _delete() {\n        this.sendAction(\"actionDelete\", this.get(\"content.id\"));\n      },\n      cancel: function cancel() {\n        this.sendAction(\"actionCancel\", this.get(\"content.id\"));\n        this.set(\"layout\", layout['default']);\n        this.rerender();\n      }\n    }\n\n  });\n\n});","define('client/controllers/issues', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({\n\t\tissuesTodo: (function () {\n\t\t\tvar model = this.get(\"model\");\n\t\t\treturn model.filterBy(\"status\", \"todo\");\n\t\t}).property(\"model.@each.status\"),\n\n\t\tissuesInprogress: (function () {\n\t\t\tvar model = this.get(\"model\");\n\t\t\treturn model.filterBy(\"status\", \"inprogress\");\n\t\t}).property(\"model.@each.status\"),\n\n\t\tissuesDone: (function () {\n\t\t\tvar model = this.get(\"model\");\n\t\t\treturn model.filterBy(\"status\", \"done\");\n\t\t}).property(\"model.@each.status\"),\n\n\t\thours: [1, 2, 3, 5, 8],\n\t\tstatus: [\"todo\", \"inprogress\", \"done\"],\n\n\t\tnewissue: {\n\t\t\ttitle: \"\",\n\t\t\tdescription: \"\",\n\t\t\twork: 1,\n\t\t\tuser: \"\",\n\t\t\tstatus: \"todo\"\n\t\t},\n\n\t\tactions: {\n\t\t\tissueDropped: function issueDropped(dropZone, issueId) {\n\t\t\t\tconsole.log(dropZone);\n\t\t\t\tconsole.log(issueId);\n\t\t\t\tvar issueSearch = this.get(\"model\").filterBy(\"id\", issueId);\n\t\t\t\tif (issueSearch.length > 0) {\n\t\t\t\t\tvar issue = issueSearch[0];\n\t\t\t\t\tissue.set(\"status\", dropZone);\n\t\t\t\t\tissue.save();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\"No issue with ID: \" + issueId);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsave: function save(issueId) {\n\t\t\t\tconsole.log(\"save\");\n\t\t\t\tvar issueSearch = this.get(\"model\").filterBy(\"id\", issueId);\n\t\t\t\tif (issueSearch.length > 0) {\n\t\t\t\t\tvar issue = issueSearch[0];\n\t\t\t\t\tissue.save();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\"No issue with ID: \" + issueId);\n\t\t\t\t}\n\t\t\t},\n\t\t\tcancel: function cancel(issueId) {\n\t\t\t\tconsole.log(\"cancel\");\n\t\t\t\tvar issueSearch = this.get(\"model\").filterBy(\"id\", issueId);\n\t\t\t\tif (issueSearch.length > 0) {\n\t\t\t\t\tvar issue = issueSearch[0];\n\t\t\t\t\tissue.rollback();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\"No issue with ID: \" + issueId);\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"delete\": function _delete(issueId) {\n\t\t\t\tconsole.log(\"delete\");\n\t\t\t\tvar issueSearch = this.get(\"model\").filterBy(\"id\", issueId);\n\t\t\t\tif (issueSearch.length > 0) {\n\t\t\t\t\tvar issue = issueSearch[0];\n\t\t\t\t\tissue.destroyRecord();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\"No issue with ID: \" + issueId);\n\t\t\t\t}\n\t\t\t},\n\t\t\taddIssue: function addIssue() {\n\t\t\t\tif (this.get(\"newissue.title\") !== \"\" && this.get(\"newissue.user\") !== \"\") {\n\t\t\t\t\tconsole.log(\"creating new issue\");\n\t\t\t\t\tvar issue = this.store.createRecord(\"issue\");\n\t\t\t\t\tissue.set(\"title\", this.get(\"newissue.title\"));\n\t\t\t\t\tissue.set(\"description\", this.get(\"newissue.description\"));\n\t\t\t\t\tissue.set(\"work\", this.get(\"newissue.work\"));\n\t\t\t\t\tissue.set(\"user\", this.get(\"newissue.user\"));\n\t\t\t\t\tissue.set(\"status\", this.get(\"newissue.status\"));\n\t\t\t\t\tconsole.log(issue);\n\t\t\t\t\tissue.save();\n\t\t\t\t\tthis.set(\"newissue\", {\n\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\tdescription: \"\",\n\t\t\t\t\t\twork: 1,\n\t\t\t\t\t\tuser: \"\",\n\t\t\t\t\t\tstatus: \"todo\"\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"No Title or User\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n});","define('client/initializers/app-version', ['exports', 'client/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function initialize(container, application) {\n      var appName = classify(application.toString());\n      Ember['default'].libraries.register(appName, config['default'].APP.version);\n    }\n  };\n\n});","define('client/initializers/export-application-global', ['exports', 'ember', 'client/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('client/models/issue', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    title: DS['default'].attr(\"string\"),\n    description: DS['default'].attr(\"string\"),\n    work: DS['default'].attr(\"number\"),\n    user: DS['default'].attr(\"string\"),\n    status: DS['default'].attr(\"string\")\n  });\n\n});","define('client/router', ['exports', 'ember', 'client/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.resource(\"issues\", function () {});\n  });\n\n  exports['default'] = Router;\n\n});","define('client/routes/issues', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({\n\t\tmodel: function model() {\n\t\t\treturn this.store.find(\"issue\");\n\t\t}\n\t});\n\n});","define('client/serializers/application', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].RESTSerializer.extend({\n\t\tprimaryKey: \"_id\"\n\t});\n\n});","define('client/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createTextNode(\"Issues\");\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"navbar navbar-default\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"container-fluid\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"navbar-header\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"class\",\"navbar-brand\");\n        dom.setAttribute(el4,\"href\",\"#\");\n        var el5 = dom.createTextNode(\"\\n        Scrum Board\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"collapse navbar-collapse\");\n        dom.setAttribute(el3,\"id\",\"bs-example-navbar-collapse-1\");\n        var el4 = dom.createTextNode(\"\\n\t\t\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"ul\");\n        dom.setAttribute(el4,\"class\",\"nav navbar-nav\");\n        var el5 = dom.createTextNode(\"\\n\t\t\t\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"li\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\t\t\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container\");\n        var el2 = dom.createTextNode(\"\\n\\n\t\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1, 3, 1, 1]),-1,-1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),0,1);\n        block(env, morph0, context, \"link-to\", [\"issues\"], {}, child0, null);\n        content(env, morph1, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('client/templates/components/col-dropzone', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('client/templates/components/issue-dragable-edit', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createElement(\"div\");\n        dom.setAttribute(el0,\"class\",\"issue\");\n        var el1 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"b\");\n        var el2 = dom.createTextNode(\"Title: \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Description: \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Work: \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"User: \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        dom.setAttribute(el1,\"type\",\"button\");\n        dom.setAttribute(el1,\"class\",\"btn btn-xs btn-success\");\n        var el2 = dom.createTextNode(\"Save\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        dom.setAttribute(el1,\"type\",\"button\");\n        dom.setAttribute(el1,\"class\",\"btn btn-xs btn-warning\");\n        var el2 = dom.createTextNode(\"Cancel\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        dom.setAttribute(el1,\"type\",\"button\");\n        dom.setAttribute(el1,\"class\",\"btn btn-xs btn-danger\");\n        var el2 = dom.createTextNode(\"Delete\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [9]);\n        var element1 = dom.childAt(fragment, [11]);\n        var element2 = dom.childAt(fragment, [13]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,-1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),0,-1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [5]),0,-1);\n        var morph3 = dom.createMorphAt(dom.childAt(fragment, [7]),0,-1);\n        inline(env, morph0, context, \"input\", [], {\"value\": get(env, context, \"content.title\")});\n        inline(env, morph1, context, \"input\", [], {\"value\": get(env, context, \"content.description\")});\n        inline(env, morph2, context, \"view\", [\"select\"], {\"content\": get(env, context, \"hours\"), \"value\": get(env, context, \"content.work\")});\n        inline(env, morph3, context, \"input\", [], {\"value\": get(env, context, \"content.user\")});\n        element(env, element0, context, \"action\", [\"save\"], {});\n        element(env, element1, context, \"action\", [\"cancel\"], {});\n        element(env, element2, context, \"action\", [\"delete\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('client/templates/components/issue-dragable', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createElement(\"div\");\n        dom.setAttribute(el0,\"class\",\"issue\");\n        var el1 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"b\");\n        var el2 = dom.createTextNode(\"Title: \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Description: \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Work: \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" hour(s)\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"User: \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        dom.setAttribute(el1,\"type\",\"button\");\n        dom.setAttribute(el1,\"class\",\"btn btn-xs btn-info\");\n        var el2 = dom.createTextNode(\"Edit\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [9]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,-1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),0,-1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [5]),0,1);\n        var morph3 = dom.createMorphAt(dom.childAt(fragment, [7]),0,-1);\n        content(env, morph0, context, \"content.title\");\n        content(env, morph1, context, \"content.description\");\n        content(env, morph2, context, \"content.work\");\n        content(env, morph3, context, \"content.user\");\n        element(env, element0, context, \"action\", [\"edit\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('client/templates/issues', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"row\");\n            var el2 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"br\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,-1);\n            block(env, morph0, context, \"issue-dragable\", [], {\"actionSave\": \"save\", \"actionDelete\": \"delete\", \"actionCancel\": \"cancel\", \"content\": get(env, context, \"issue\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          block(env, morph0, context, \"each\", [get(env, context, \"issuesTodo\")], {\"keyword\": \"issue\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"row\");\n            var el2 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"br\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,-1);\n            block(env, morph0, context, \"issue-dragable\", [], {\"actionSave\": \"save\", \"actionDelete\": \"delete\", \"actionCancel\": \"cancel\", \"content\": get(env, context, \"issue\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          block(env, morph0, context, \"each\", [get(env, context, \"issuesInprogress\")], {\"keyword\": \"issue\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"row\");\n            var el2 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"br\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,-1);\n            block(env, morph0, context, \"issue-dragable\", [], {\"actionSave\": \"save\", \"actionDelete\": \"delete\", \"actionCancel\": \"cancel\", \"content\": get(env, context, \"issue\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          block(env, morph0, context, \"each\", [get(env, context, \"issuesDone\")], {\"keyword\": \"issue\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"newissue\");\n        dom.setAttribute(el2,\"class\",\"col-sm-3\");\n        var el3 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        var el4 = dom.createTextNode(\"Add new Issue\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"form\");\n        var el4 = dom.createTextNode(\"\\n\t\t\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"form-group\");\n        var el5 = dom.createTextNode(\"\\n\t\t\t\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\t\t\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\t\t\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"form-group\");\n        var el5 = dom.createTextNode(\"\\n\t\t\t\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\t\t\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\t\t\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"form-group\");\n        var el5 = dom.createTextNode(\"\\n\t\t\t\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"label\");\n        var el6 = dom.createTextNode(\"Work\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\t\t\t\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\t\t\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"clasS\",\"form-group\");\n        var el5 = dom.createTextNode(\"\\n\t\t\t\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\t\t\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\t\t\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"form-group\");\n        var el5 = dom.createTextNode(\"\\n\t\t\t\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"label\");\n        var el6 = dom.createTextNode(\"Status\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\t\t\t\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\t\t\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"button\");\n        dom.setAttribute(el4,\"type\",\"submit\");\n        dom.setAttribute(el4,\"class\",\"btn btn-success\");\n        var el5 = dom.createTextNode(\"Add\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\t\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n\\n\\n\\n\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"todo\");\n        dom.setAttribute(el2,\"class\",\"issueColumn col-sm-3 \");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        dom.setAttribute(el3,\"class\",\"text-center\");\n        var el4 = dom.createTextNode(\"Todo\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"inprogress\");\n        dom.setAttribute(el2,\"class\",\"issueColumn col-sm-3\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        dom.setAttribute(el3,\"class\",\"text-center\");\n        var el4 = dom.createTextNode(\"In Progress\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"id\",\"done\");\n        dom.setAttribute(el2,\"class\",\"issueColumn col-sm-3\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        dom.setAttribute(el3,\"class\",\"text-center\");\n        var el4 = dom.createTextNode(\"Done\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, element = hooks.element, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[4]); }\n        var element0 = dom.childAt(fragment, [2]);\n        var element1 = dom.childAt(element0, [1, 3]);\n        var element2 = dom.childAt(element1, [11]);\n        var morph0 = dom.createMorphAt(dom.childAt(element1, [1]),0,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [3]),0,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element1, [5]),2,-1);\n        var morph3 = dom.createMorphAt(dom.childAt(element1, [7]),0,1);\n        var morph4 = dom.createMorphAt(dom.childAt(element1, [9]),2,-1);\n        var morph5 = dom.createMorphAt(dom.childAt(element0, [3]),2,-1);\n        var morph6 = dom.createMorphAt(dom.childAt(element0, [5]),2,-1);\n        var morph7 = dom.createMorphAt(dom.childAt(element0, [7]),2,-1);\n        var morph8 = dom.createMorphAt(fragment,3,4,contextualElement);\n        inline(env, morph0, context, \"input\", [], {\"value\": get(env, context, \"newissue.title\"), \"placeholder\": \"Title\", \"class\": \"form-control\"});\n        inline(env, morph1, context, \"textarea\", [], {\"value\": get(env, context, \"newissue.description\"), \"cols\": \"30\", \"rows\": \"3\", \"placeholder\": \"Description\", \"class\": \"form-control\"});\n        inline(env, morph2, context, \"view\", [\"select\"], {\"value\": get(env, context, \"newissue.work\"), \"content\": get(env, context, \"hours\")});\n        inline(env, morph3, context, \"input\", [], {\"value\": get(env, context, \"newissue.user\"), \"placeholder\": \"User\", \"class\": \"form-control\"});\n        inline(env, morph4, context, \"view\", [\"select\"], {\"value\": get(env, context, \"newissue.status\"), \"content\": get(env, context, \"status\")});\n        element(env, element2, context, \"action\", [\"addIssue\"], {});\n        block(env, morph5, context, \"col-dropzone\", [], {\"action\": \"issueDropped\", \"dropped\": \"todo\"}, child0, null);\n        block(env, morph6, context, \"col-dropzone\", [], {\"action\": \"issueDropped\", \"dropped\": \"inprogress\"}, child1, null);\n        block(env, morph7, context, \"col-dropzone\", [], {\"action\": \"issueDropped\", \"dropped\": \"done\"}, child2, null);\n        content(env, morph8, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('client/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('client/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('client/tests/components/col-dropzone.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/col-dropzone.js should pass jshint', function() { \n    ok(true, 'components/col-dropzone.js should pass jshint.'); \n  });\n\n});","define('client/tests/components/issue-dragable.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/issue-dragable.js should pass jshint', function() { \n    ok(true, 'components/issue-dragable.js should pass jshint.'); \n  });\n\n});","define('client/tests/controllers/issues.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/issues.js should pass jshint', function() { \n    ok(true, 'controllers/issues.js should pass jshint.'); \n  });\n\n});","define('client/tests/helpers/resolver', ['exports', 'ember/resolver', 'client/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('client/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('client/tests/helpers/start-app', ['exports', 'ember', 'client/app', 'client/router', 'client/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('client/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('client/tests/models/issue.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/issue.js should pass jshint', function() { \n    ok(true, 'models/issue.js should pass jshint.'); \n  });\n\n});","define('client/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('client/tests/routes/issues.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/issues.js should pass jshint', function() { \n    ok(true, 'routes/issues.js should pass jshint.'); \n  });\n\n});","define('client/tests/serializers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/application.js should pass jshint', function() { \n    ok(true, 'serializers/application.js should pass jshint.'); \n  });\n\n});","define('client/tests/test-helper', ['client/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('client/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('client/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"adapter:application\", \"ApplicationAdapter\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('client/tests/unit/adapters/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/application-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/application-test.js should pass jshint.'); \n  });\n\n});","define('client/tests/unit/components/col-dropzone-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"col-dropzone\", {});\n\n  ember_qunit.test(\"it renders\", function (assert) {\n    assert.expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, \"preRender\");\n\n    // renders the component to the page\n    this.render();\n    assert.equal(component._state, \"inDOM\");\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('client/tests/unit/components/col-dropzone-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/col-dropzone-test.js should pass jshint', function() { \n    ok(true, 'unit/components/col-dropzone-test.js should pass jshint.'); \n  });\n\n});","define('client/tests/unit/components/issue-dragable-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"issue-dragable\", {});\n\n  ember_qunit.test(\"it renders\", function (assert) {\n    assert.expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, \"preRender\");\n\n    // renders the component to the page\n    this.render();\n    assert.equal(component._state, \"inDOM\");\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('client/tests/unit/components/issue-dragable-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/issue-dragable-test.js should pass jshint', function() { \n    ok(true, 'unit/components/issue-dragable-test.js should pass jshint.'); \n  });\n\n});","define('client/tests/unit/controllers/issues-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:issues\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('client/tests/unit/controllers/issues-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/issues-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/issues-test.js should pass jshint.'); \n  });\n\n});","define('client/tests/unit/models/issue-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel(\"issue\", {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('client/tests/unit/models/issue-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/issue-test.js should pass jshint', function() { \n    ok(true, 'unit/models/issue-test.js should pass jshint.'); \n  });\n\n});","define('client/tests/unit/routes/issues-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:issues\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('client/tests/unit/routes/issues-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/issues-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/issues-test.js should pass jshint.'); \n  });\n\n});","define('client/tests/unit/serializers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"serializer:application\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var serializer = this.subject();\n    assert.ok(serializer);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('client/tests/unit/serializers/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/serializers');\n  test('unit/serializers/application-test.js should pass jshint', function() { \n    ok(true, 'unit/serializers/application-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('client/config/environment', ['ember'], function(Ember) {\n  var prefix = 'client';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"client/tests/test-helper\");\n} else {\n  require(\"client/app\")[\"default\"].create({\"name\":\"client\",\"version\":\"0.0.0.61602728\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrtjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"client.js"}